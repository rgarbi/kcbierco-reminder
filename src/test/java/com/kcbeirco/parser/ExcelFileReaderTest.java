package com.kcbeirco.parser;

import com.kcbeirco.models.ExcelCellCoordinates;
import com.kcbeirco.models.ExcelParsingConfig;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'Richard' at '1/30/16 1:10 PM' with Gradle 2.3
 *
 * @author Richard, @date 1/30/16 1:10 PM
 */
public class ExcelFileReaderTest {
    protected ExcelFileReader excelFileReader;

    @Before
    public void setUp(){
        excelFileReader = new ExcelFileReader("", new ExcelParsingConfig());
    }

    @Test
    public void testGetColumnNumberFromLetter() {
        Assert.assertEquals(1, excelFileReader.getColumnNumberFromLetter("A"));
    }

    @Test
    public void testGetColumnNumberFromLowerCaseLetter() {
        Assert.assertEquals(1, excelFileReader.getColumnNumberFromLetter("a"));
    }

    @Test
    public void testGetColumnNumberFromLetterZIsStillGood() {
        Assert.assertEquals(26, excelFileReader.getColumnNumberFromLetter("Z"));
    }

    @Test
    public void testGetRowNumber() {
        Assert.assertEquals(1, excelFileReader.getRowNumber("A1"));
    }

    @Test
    public void testGetRowNumberTwoDigits() {
        Assert.assertEquals(13, excelFileReader.getRowNumber("A13"));
    }

    @Test
    public void testGetRowNumberThreeDigits() {
        Assert.assertEquals(144, excelFileReader.getRowNumber("A144"));
    }

    @Test
    public void testGetColumnLetter() throws CellNameParseException {
        Assert.assertEquals("A", excelFileReader.getColumnLetter("A1"));
    }

    @Test
    public void testGetColumnLetterLowerCase() throws CellNameParseException {
        Assert.assertEquals("a", excelFileReader.getColumnLetter("a1"));
    }

    @Test(expected = CellNameParseException.class)
    public void testGetColumnLetterThrowsException() throws CellNameParseException {
        excelFileReader.getColumnLetter("11");
    }

    @Test
    public void testTranslateCommonNameToCoordinates() throws CellNameParseException {
        ExcelCellCoordinates excelCellCoordinates = excelFileReader.translateCommonNameToCoordinates("D34");

        Assert.assertEquals(4, excelCellCoordinates.getCellNumber());
        Assert.assertEquals(34, excelCellCoordinates.getRowNumber());
    }

    @Test
    public void testTranslateCommonNameToCoordinatesLowerCase() throws CellNameParseException {
        ExcelCellCoordinates excelCellCoordinates = excelFileReader.translateCommonNameToCoordinates("d34");

        Assert.assertEquals(4, excelCellCoordinates.getCellNumber());
        Assert.assertEquals(34, excelCellCoordinates.getRowNumber());
    }

    @Test(expected = CellNameParseException.class)
    public void testTranslateCommonNameToCoordinatesThrowsException() throws CellNameParseException {
        excelFileReader.translateCommonNameToCoordinates("334");
    }



}
